(function(app){app.events.on('app:init',function(){app.plugins.register('Cascade',['field'],{baseFieldName:null,baseFieldType:null,fieldNames:null,field:null,model:null,attachAction:null,readOnlyProp:null,onAttach:function(component,plugin){this.baseFieldName=component.options.def.name;this.field=component;this.model=this.field.options.model;this.baseFieldType=this.field.options.def.type;this.attachAction=this.field.action;if(this.baseFieldType==='fieldset-cascade'){this.fieldNames=_.map(this.field.options.def.fields,function(field){return field.name;});}else{this.fieldNames=[this.field.baseFieldName];}
var oppConfig=app.metadata.getModule('Opportunities','config');if(!oppConfig||oppConfig.opps_view_by!=='RevenueLineItems'){this.field.displayCheckbox=false;return;}else if(this.field.options.view.action==='create'){this.field.displayCheckbox=false;this.field.action='disabled';return;}
this.field.displayCheckbox=true;component.setMode=_.wrap(component.setMode,_.bind(function(setMode,args){setMode.call(component,args);this.handleModeChange(args);},this));if(this.field.options.view.action==='edit'){this.field.on('render',this.bindEditActions,this);}
_.each(this.fieldNames,function(fieldName){this.model.on('change:'+fieldName,this.setCascadeValue,this);},this);this.model.on('sync',this.clearCascadeValue,this);if(this.options&&this.options.def&&this.options.def.disable_field){let disableFieldName=this.options.def.disable_field;if(_.isArray(disableFieldName)){_.each(disableFieldName,function(fieldName){this.model.on('change:'+fieldName,this.handleReadOnly,this);},this);}else{this.model.on('change:'+disableFieldName,this.handleReadOnly,this);}}},handleModeChange:function(toTemplate){if(!this.field.$el){return;}
var action=toTemplate||this.field.action||this.field.view.action||'detail';if(action==='edit'){this.handleReadOnly(true);}else{this.field.setDisabled(false,{trigger:true});}},bindEditActions:function(){if(this.attachAction==='edit'){this.attachAction=null;this.field.render();}
var checkbox=this.field.$el.find('input[type=checkbox]');var self=this;checkbox.click(function(){if(this.checked===false){self.field.setDisabled(true,{trigger:true});self.resetModelValue();}else{self.field.setDisabled(false,{trigger:true});$('.'+self.baseFieldName+'_should_cascade').prop('checked',true);self.setCascadeValue();}
self.bindEditActions();});},handleReadOnly:function(editClick){if(_.isUndefined(editClick)){editClick=false;}
if(this.model&&this.options&&this.options.def&&this.options.def.disable_field){let disableFieldName=this.options.def.disable_field;let calculatedValue=null;if(_.isArray(disableFieldName)){let fieldValue1=this.model.get(disableFieldName[0]);let fieldValue2=this.model.get(disableFieldName[1]);calculatedValue=(!_.isUndefined(fieldValue1)&&!_.isUndefined(fieldValue2))?(fieldValue1-fieldValue2):null;}else if(typeof disableFieldName==='string'){var disableFieldValue=this.model.get(disableFieldName);calculatedValue=!_.isUndefined(disableFieldValue)?disableFieldValue:null;}
if(calculatedValue!==null){if(!_.isUndefined(this.field.def)&&_.isUndefined(this.field.def.readOnlyProp)){this.field.def.readOnlyProp=false;}
this.readOnlyProp=calculatedValue<=0||this.field.def.readOnlyProp;this.field.setDisabled(this.readOnlyProp,{trigger:true});}}
var checkbox=this.field.$el.find('input[type=checkbox]');if(app.utils.isTruthy(editClick)||(this.field.action==='edit'&&!checkbox.prop('checked'))){this.field.setDisabled(true,{trigger:true});}
if(!_.isEmpty(this.field._errors)){this.field.hasErrors=true;this.field.setDisabled(false);}
this.bindEditActions();},resetModelValue:function(){_.each(this.fieldNames,function(fieldName){this.model.set(fieldName,this.model.getSynced(fieldName));this.model.set(fieldName+'_cascade','');},this);},setCascadeValue:function(){_.each(this.fieldNames,function(fieldName){this.model.set(fieldName+'_cascade',this.model.get(fieldName));},this);},clearCascadeValue:function(){if(this.context.attributes.layout&&this.context.attributes.layout==='record'){_.each(this.fieldNames,function(fieldName){this.model.set(fieldName+'_cascade','');},this);}}});});})(SUGAR.App);